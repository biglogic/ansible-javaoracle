---
    - hosts: all
      user : vagrant 
      become: yes
      become_user: root
      vars_files:
        - ../groupvars/var.yml
    
      tasks:
       # - name: Add proxy to ec2-user
        #  lineinfile:
        #      dest: /home/vagrant/.bashrc
        #      line: '{{ item }}'
         # with_items:
          #          - 'export http_proxy="http://172.18.10.246:80"'
           #         - 'export https_proxy="http://172.18.10.246:80"'
            #        - 'export no_proxy="localhost, .cat.com, 169.254.169.254"'
    
        # - name: Add proxy to environment
        #   lineinfile:
        #       dest: /etc/environment
        #       line: '{{ item }}'
        #   with_items:
        #       - 'export http_proxy="http://172.18.10.246:80"'
        #       - 'export https_proxy="http://172.18.10.246:80"'
        #       - 'export no_proxy="localhost, .cat.com, 169.254.169.254"'
    
        # - name: Check if java is installed
        #   command: java -version
        #   register: java_result
        #   ignore_errors: True
    
        # - debug:
        #      msg: "Failed - Java is not installed"
        #   when: java_result is failed
    
        # - debug:
        #      msg: "Success - Java is installed"
        #   when:  java_result is success
    
        # - name: Download java8
        #   get_url:
        #      url: "{{ item.value.url }}"
        #      headers: "{{ item.value.args }}"
        #      force: yes
        #      dest: /tmp
        #   with_dict: "{{ java }}"  
        #   when: java_result is failed
    
        # - name: Install package java8
        #   yum:
        #    name: /tmp/jdk-8u141-linux-x64.rpm
        #    state: present
        #   with_dict: "{{ java }}"  
        #   when: java_result is failed
       
        # - name: Check if maven is installed
        #   command: mvn -v
        #   register: maven_result
        #   ignore_errors: True
    
        # - debug:
        #     msg: "Failed - maven is not installed"
        #   when: maven_result is failed
        
        # - debug:
        #     msg: "Success - Java is installed"
        #   when:  maven_result is success
    
  
        # - name: Download Maven
        #   get_url:
        #     url: "{{ item.value.url }}"
        #     force: yes
        #     dest: /tmp
        #   with_dict: "{{ maven }}" 
        #   when: maven_result is failed
    
        # - name: Unarchive Maven
        #   unarchive:
        #     src: /tmp/apache-maven-3.6.3-bin.tar.gz
        #     dest: /opt/
        #     mode: 0755
        #     owner: root
        #     group: root
        #   when: maven_result is failed
  
        # - name: install maven package
        #   yum:
        #      name: /opt/apache-maven-3.6.3  
        #      state: present 
        #   when: maven_result is failed 
        
       # - name: System-wide environment variables.
        #    lineinfile:
        #      dest: /etc/environment
        #      line: '{{ item }}'
        #   with_items:
        #        - 'export http_proxy="http://172.18.10.246:80"'
        #        - 'export https_proxy="http://172.18.10.246:80"'
        #        - 'export no_proxy="localhost, .cat.com, 169.254.169.254"'
         
        # name: checking if the file 1 exists
        #   stat:      
        #      path: /opt/apache-maven-3.6.3
        #   register: stat_result
  
         
        - name: moving file 1
          command: mv /opt/apache-maven-3.6.3   /usr/local/apache-maven
          when: stat_result.stat.exists == True                    
        
        - name: Install yum package
          yum:
           name:
             - curl-devel
             - expat-devel
             - gettext-devel
             - openssl-devel
             - zlib-devel
             - wget
             - gcc
             - cpan
         
        - name: Get git binary
          unarchive:
             src: "{{ url }}"
             dest: "{{ temp_dir }}"
             remote_src: yes
          changed_when: false
          register: result     
                   
        - name: Make all git binary
          make:
             chdir: "{{ binary_dir }}"
             target: all
             params:
              prefix: "{{ prefix }}"
          changed_when: false 
  
        - name: Make install git binary
          make:
            chdir: "{{ binary_dir }}"
            target: install
            params:
              prefix: "{{ prefix }}"
          changed_when: false
         
        - name: Remove file
          file:
            path: "{{ binary_dir }}"
            state: absent
          changed_when: false 
  
        
        - name: Add Docker repo
          get_url:
            url: https://download.docker.com/linux/vagrant/docker-ce.repo
            dest: /etc/yum.repos.d/docer-ce.repo
         
  
        - name: Enable Docker Edge repo
          ini_file:
            dest: /etc/yum.repos.d/docer-ce.repo
            section: 'docker-ce-edge'
            option: enabled
            value: 0
          
  
        - name: Enable Docker Test repo
          ini_file:
            dest: /etc/yum.repos.d/docer-ce.repo
            section: 'docker-ce-test'
            option: enabled
            value: 0
        
  
        - name: Install Docker
          package:
           name: docker-ce
           state: latest
         
  
        - name: Start Docker service
          service:
            name: docker
            state: started
            enabled: yes
        
  
        - name: Add user vagrant to docker group
          user:
            name: vagrant
            groups: docker
            append: yes
        
        - name: Add Docker repo
          get_url:
            url: https://download.docker.com/linux/vagrant/docker-ce.repo
            dest: /etc/yum.repos.d/docer-ce.repo         
  
           
        - name: Add user vagrant to docker group
          user:
             name: "vagrant"
             groups: "docker"
             append: "yes"
         
        - name: Install Docker Compose
          get_url:
             url:  "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64"
             dest: /usr/local/bin/docker-compose
             owner: root
             mode: 0755  
  
        - name: install python
          yum:
               name: python3
               
        - name: check python version 
          command: python3 --version         
          register: python_result
        
        - name: Creates directory
          file:
            path: /home/vagrant/python3
            state: directory  
        
        - name: install python package
          pip:
            name: virualenv     
  
        # - name: install virtual environment
        #   command:
        #     cmd: :/home/vagrant/python3 virtualenv  /usr/bin/python3 -p python3
              
        
        - name: NODEJS and NPM Installation
          get_url:
               url: https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh
               dest: /home/vagrant/install.sh 
        
        - name: run shell script 
          command:
               cmd: bash /home/vagrant/install.sh
        
        - name: Reboot server in order for changes to take place
          command: "sleep 1 && reboot"
        
        - name: nvm install 12.7.0
          shell: "source /root/.nvm/nvm.sh && nvm install 12.7.0" 
          args:
            executable: /bin/bash

        - name: check version
          command: "npm -v && node -v "
          register: version_message
          ignore_errors: yes
        
        - debug:
            msg: "{{version_message}}"  
        
        - name: PSQL Installation
          yum:
            name: postgresql-server


        - name: Java 11 Installation
          shell: curl -s "https://get.sdkman.io" | bash
          args: 
             warn: no
         
        - name : Install the java 11.0.2-open
          command: "sdk java 11.0.2-open && sdk use java 11.0.2-open"
          

        - name: SBT Installation
          shell: curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo
          args:
            warn: no 

        - name:  Install Sbt
          yum:
            name: sbt 
        
            

  
             
         
         
          

   